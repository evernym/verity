apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "verity.fullname" . }}
  labels:
    tags.datadoghq.com/service: {{ .Values.service }}
    tags.datadoghq.com/env: {{ .Values.env }}
  annotations:
    app.gitlab.com/app: {{ .Values.gitlab_ci_project_path_slug }}
    app.gitlab.com/env: {{ .Values.gitlab_ci_environment_slug }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ template "verity.fullname" . }}
  replicas: {{ .Values.startReplicas }}
  template:
    metadata:
      labels:
        app: {{ template "verity.fullname" . }}
        revision: {{ .Release.Revision | quote }}
        actorSystemName: verity
        tags.datadoghq.com/service: {{ .Values.service }}
        tags.datadoghq.com/env: {{ .Values.env }}
      annotations:
        app.gitlab.com/app: {{ .Values.gitlab_ci_project_path_slug }}
        app.gitlab.com/env: {{ .Values.gitlab_ci_environment_slug }}
        {{- if .Values.deployment.vault.enable }}
        {{- $credentials := printf "kubernetes_secrets/eks-%s/%s-%s" .Values.gitlab_env .Values.name .Values.service }}
        {{- $credentials_tf := printf "kubernetes_secrets/eks-%s/%s-%s-tf" .Values.gitlab_env .Values.name .Values.service }}
        {{- $app_confluent := printf "kubernetes_secrets/eks-%s/%s/app-confluent" .Values.gitlab_env .Values.name }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "k8s-eks-{{ coalesce .Values.vault_auth_role .Values.env }}"
        vault.hashicorp.com/auth-path: "auth/k8s/eks-{{ coalesce .Values.vault_auth_path .Values.gitlab_env }}"
        vault.hashicorp.com/agent-inject-secret-credentials: "{{ $credentials }}"
        vault.hashicorp.com/agent-inject-secret-credentials-tf: "{{ $credentials_tf }}"
        vault.hashicorp.com/agent-inject-secret-app-confluent: "{{ $app_confluent }}"
        vault.hashicorp.com/tls-secret: vault-tls-secret
        vault.hashicorp.com/ca-cert: /vault/tls/evernym-root-ca.crt
        vault.hashicorp.com/agent-pre-populate-only : "true"
        vault.hashicorp.com/agent-inject-template-credentials: |
{{ include "verity.vaultInjectTemplate" (dict "Secret" $credentials) | indent 10 }}
        vault.hashicorp.com/agent-inject-template-credentials-tf: |
{{ include "verity.vaultInjectTemplate" (dict "Secret" $credentials_tf) | indent 10 }}
        vault.hashicorp.com/agent-inject-template-app-confluent: |
{{ include "verity.vaultInjectTemplate" (dict "Secret" $app_confluent) | indent 10 }}
        {{- end }}
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: {{ template "verity.fullname" . }}
            revision: {{ .Release.Revision | quote }}
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: {{ template "verity.fullname" . }}
            revision: {{ .Release.Revision | quote }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      containers:
      - name: {{ template "verity.fullname" . }}
        image: {{ .Values.deployment.image }}:{{ .Values.deployment.tag }}
        resources:
          requests:
            memory: {{ .Values.deployment.resources.requests.memory }}
            cpu: {{ .Values.deployment.resources.requests.cpu }}
          limits:
            memory: {{ .Values.deployment.resources.limits.memory }}
            cpu: {{ .Values.deployment.resources.limits.cpu }}
        startupProbe:
          httpGet:
            path: {{ .Values.deployment.probes.startup.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.startup.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.readiness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.readiness.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.liveness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.liveness.failureThreshold }}
        envFrom:
        - configMapRef:
            name: vars-{{ template "verity.fullname" . }}
        env:
        - name: CINNAMON__CHMETRICS__DATADOG_REPORTER__HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: VERITY__METRICS__TAGS__POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config-files
          mountPath: /etc/verity/verity-application/config-map
          readOnly: true
        - name: ledger-genesis-files
          mountPath: /var/lib/indy/
          readOnly: true
        ports:
        - name: http
          containerPort: {{ .Values.deployment.containerPort }}
        - name: management
          containerPort: 8558
          protocol: TCP
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
      volumes:
      - name: config-files
        configMap:
          name: file-{{ template "verity.fullname" . }}
      - name: ledger-genesis-files
        configMap:
          name: ledger-genesis-{{ template "verity.fullname" . }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ template "verity.fullname" . }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "verity.fullname" . }}
